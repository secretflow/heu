# Copyright 2024 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################

module(
    name = "heu",
    version = "0.6.0b0",
    compatibility_level = 1,
)

bazel_dep(name = "yacl", version = "0.4.5b11-nightly-20250514")
bazel_dep(name = "seal", version = "3.6.6")
bazel_dep(name = "spdlog", version = "1.14.1")
bazel_dep(name = "fmt", version = "11.0.2")
bazel_dep(name = "msgpack-c", version = "6.1.0")
bazel_dep(name = "gflags", version = "2.2.2")
bazel_dep(name = "abseil-cpp", version = "20240722.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "bazel_features", version = "1.20.0")
bazel_dep(name = "rules_python", version = "0.16.2")
bazel_dep(name = "pybind11_bazel", version = "2.13.6")
bazel_dep(name = "rules_cuda", version = "0.2.3")
bazel_dep(name = "cereal", version = "1.3.2")
bazel_dep(name = "platforms", version = "0.0.8")

# self-hosted registry
bazel_dep(name = "pailliercryptolib", version = "2.0.0-20231102-fdc2135.bcr.1")
bazel_dep(name = "org_interconnection", version = "0.0.1")
bazel_dep(name = "eigen", version = "3.4.90-20230801-66e8f3")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    ignore_root_user_error = True,
    python_version = "3.10",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    extra_pip_args = [
    ],
    hub_name = "pypi",
    python_version = "3.10",
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "pypi")

cuda = use_extension("@rules_cuda//cuda:extensions.bzl", "toolchain")
cuda.local_toolchain(
    name = "local_cuda",
    toolkit_path = "",
)
use_repo(cuda, "local_cuda")

bazel_dep(name = "rules_rust", version = "0.53.0")

# test
bazel_dep(name = "googletest", version = "1.15.2", dev_dependency = True)
bazel_dep(name = "google_benchmark", version = "1.8.5", dev_dependency = True)

non_module_dependencies = use_extension("//bazel:defs.bzl", "non_module_dependencies")
use_repo(non_module_dependencies, "com_github_nvlabs_cgbn")
