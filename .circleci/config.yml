# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  linux_ut:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: registry.hub.docker.com/secretflow/heu-ci:0.3
    resource_class: xlarge
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "bazel test"
          command: |
            pip install numpy
            bazel test //heu/... --ui_event_filters=-info,-debug,-warning --test_timeout=1800 --test_output=errors --verbose_failures
      - store_test_results:
          path: ./bazel-testlogs
  macOS_ut:
    macos:
      xcode: 14.2
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    resource_class: macos.m1.large.gen1
    steps:
      - checkout
      - run:
          name: "Install homebrew dependencies"
          command: |
            brew install bazel cmake ninja libomp wget
            (cd /opt/homebrew/Cellar/bazel/*.*.*/libexec/bin && curl -fLO https://github.com/bazelbuild/bazel/releases/download/5.4.0/bazel-5.4.0-darwin-arm64 && chmod +x bazel-5.4.0-darwin-arm64)
      - run:
          name: "Install Miniconda"
          command: |
            wget https://repo.anaconda.com/miniconda/Miniconda3-py38_23.1.0-1-MacOSX-arm64.sh -O ~/miniconda.sh
            bash ~/miniconda.sh -b -p $HOME/miniconda
            source $HOME/miniconda/bin/activate
            conda init bash zsh
            pip install numpy
      - run:
          name: "bazel test"
          command: |
            bazel test --ui_event_filters=-info,-debug,-warning --test_timeout=1800 --test_output=errors --verbose_failures -- //heu/... -//heu/experimental/tfhe/...
      - store_test_results:
          path: ./bazel-testlogs
  linux_publish:
    docker:
      - image: registry.hub.docker.com/secretflow/release-ci:0.4
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: "build package and publish"
          command: |
            set -ex
            bazel build -c opt //heu/pylib
            heu_wheel=$(<bazel-bin/heu/pylib/pylib.name)
            heu_wheel_path="bazel-bin/heu/pylib/${heu_wheel}"
            python3 -m pip install twine
            python3 -m twine upload -r pypi -u __token__ -p ${PYPI_TWINE_TOKEN} $heu_wheel_path

  macOS_x64_publish:
    macos:
      xcode: 13.0.0
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    resource_class: large
    steps:
      - checkout
      - run:
          name: "build package and publish"
          command: |
            set -ex
            
            brew install bazel cmake ninja nasm libomp wget
            (cd "/usr/local/Cellar/bazel/4.2.1/libexec/bin" && curl -fLO https://releases.bazel.build/5.4.0/release/bazel-5.4.0-darwin-x86_64 && chmod +x bazel-5.4.0-darwin-x86_64)

            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O ~/miniconda.sh
            bash ~/miniconda.sh -b -p $HOME/miniconda
            source $HOME/miniconda/bin/activate
            conda init zsh

            bazel build -c opt //heu/pylib
            heu_wheel=$(<bazel-bin/heu/pylib/pylib.name)
            heu_wheel_path="bazel-bin/heu/pylib/${heu_wheel}"
            python3 -m pip install twine
            python3 -m twine upload -r pypi -u __token__ -p ${PYPI_TWINE_TOKEN} $heu_wheel_path
  macOS_arm64_publish:
    macos:
      xcode: 14.2
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    resource_class: macos.m1.large.gen1
    steps:
      - checkout
      - run:
          name: "build package and publish"
          command: |
            set -ex
            
            brew install bazel cmake ninja libomp wget
            (cd /opt/homebrew/Cellar/bazel/*.*.*/libexec/bin && curl -fLO https://github.com/bazelbuild/bazel/releases/download/5.4.0/bazel-5.4.0-darwin-arm64 && chmod +x bazel-5.4.0-darwin-arm64)

            wget https://repo.anaconda.com/miniconda/Miniconda3-py38_23.1.0-1-MacOSX-arm64.sh -O ~/miniconda.sh
            bash ~/miniconda.sh -b -p $HOME/miniconda
            source $HOME/miniconda/bin/activate
            conda init zsh

            bazel build -c opt //heu/pylib
            heu_wheel=$(<bazel-bin/heu/pylib/pylib.name)
            heu_wheel_path="bazel-bin/heu/pylib/${heu_wheel}"
            python3 -m pip install twine
            python3 -m twine upload -r pypi -u __token__ -p ${PYPI_TWINE_TOKEN} $heu_wheel_path

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  ut:
    jobs:
      - linux_ut
      - macOS_ut
  publish:
    when: << pipeline.parameters.GHA_Action >>
    jobs:
      - linux_publish
      - macOS_x64_publish
      - macOS_arm64_publish
