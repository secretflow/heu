load("@yacl//bazel:yacl.bzl", "yacl_cc_library", "yacl_cc_test")

package(default_visibility = ["//visibility:public"])

test_suite(
    name = "leichi_paillier_tests",
)

config_setting(
    name = "use_leichi",
    values = {"define": "enable_leichi=true"},
)

yacl_cc_library(
    name = "leichi_paillier_defs",
    hdrs = ["leichi.h"],
    deps = [":leichi_paillier"],
)

yacl_cc_library(
    name = "leichi_paillier",
    srcs = select({
        ":use_leichi":[
            "vector_decryptor.cc",
            "vector_encryptor.cc",
            "vector_evaluator.cc",
            "key_generator.cc",
            "public_key.cc",
            "secret_key.cc",
            "plaintext.cc",
            "ciphertext.cc",
            "utils.cc",
            "runtime.cc",
        ],
        "//conditions:default":[],
    }),

    hdrs = select({
        ":use_leichi":[
            "plaintext.h",
            "ciphertext.h",
            "vector_decryptor.h",
            "vector_encryptor.h",
            "vector_evaluator.h",
            "key_generator.h",
            "public_key.h",
            "secret_key.h",
            "leichi.h",
            "utils.h",
            "runtime.h", 
        ],
        "//conditions:default":[],
    }),

    visibility = ["//visibility:public"],

    deps = select({
        ":use_leichi":[
            "//heu/library/algorithms/util",
            "@com_github_msgpack_msgpack//:msgpack",
            "@com_github_openssl_openssl//:openssl",
            "@com_github_uscilab_cereal//:cereal",
            ":pcie",
            "compiler",
        ],
        "//conditions:default":[],
    }),

    defines = select({
        "use_leichi":["APPLY_LEICHI"],
        "//conditions:default":[],
    })
)


yacl_cc_library(
    name = "pcie",
    srcs = ["pcie/pcie.cc"],
    hdrs = ["pcie/pcie.h"],
    deps = [

    ],
)

yacl_cc_library(
    name = "compiler",
    srcs = ["compiler/compiler.cc"],
    hdrs = ["compiler/compiler.h"],
    deps = [
        
    ],
)

yacl_cc_test(
   name = "key_generator_test",
   srcs = select({
        ":use_leichi":[
            "key_generator_test.cc"],
        "//conditions:default":[],
   }),
   deps = select({
        ":use_leichi":[
            ":leichi_paillier",
            "@com_github_openssl_openssl//:openssl"],
        "//conditions:default":[],
   }),

    defines = select({
        "use_leichi":["APPLY_LEICHI"],
        "//conditions:default":[],
    })
)

yacl_cc_test(
    name = "leichi_test",
    srcs = select({
        ":use_leichi":[
            "leichi_test.cc"],
        "//conditions:default":[],
   }),

    deps = select({
        ":use_leichi":[
            ":leichi_paillier"],
        "//conditions:default":[],
   }),
    defines = select({
        "use_leichi":["APPLY_LEICHI"],
        "//conditions:default":[],
    })
)
